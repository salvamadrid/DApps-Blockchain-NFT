{"ast":null,"code":"import _toConsumableArray from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/salvador/DApps/DApps-Blockchain/Colores/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/salvador/DApps/DApps-Blockchain/Colores/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport Color from '../abis/Color.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('¡Considera usar Metamask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, totalSupply, i, color;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Cargar una cuenta\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                networkId = '5777';\n                networkData = Color.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                abi = Color.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                }); // Función 'totalSupply' del Smart Contract\n\n                _context3.next = 14;\n                return contract.methods.totalSupply().call();\n\n              case 14:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                }); // Carga de colores\n\n                i = 1;\n\n              case 17:\n                if (!(i <= totalSupply)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return contract.methods.colors(i - 1).call();\n\n              case 20:\n                color = _context3.sent;\n                this.setState({\n                  colors: [].concat(_toConsumableArray(this.state.colors), [color])\n                });\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                _context3.next = 28;\n                break;\n\n              case 27:\n                window.alert('¡Smart Contract no desplegado en la red!');\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() // Constructor\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (color) {\n      console.log('¡Nuevo NFT en procedimiento!');\n\n      _this.state.contract.methods.mint(color).send({\n        from: _this.state.account\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          colors: [].concat(_toConsumableArray(_this.state.colors), [color])\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 0,\n      colors: []\n    };\n    return _this;\n  } // Función para un nuevo Color como NFT\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"https://frogames.es/rutas-de-aprendizaje\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"DApp\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.account))))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" DApp de coleccionables de NFT's\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var color = _this2.color.value;\n\n          _this2.mint(color);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-1\",\n        placeholder: \"Ej: #FFFFFF\",\n        ref: function ref(input) {\n          _this2.color = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-success\",\n        value: \"NUEVO NFT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.state.colors.map(function (color, key) {\n        return React.createElement(\"div\", {\n          key: key,\n          className: \"col-md-3 mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"token\",\n          style: {\n            backgroundColor: color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, color));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/salvador/DApps/DApps-Blockchain/Colores/src/components/App.js"],"names":["React","Component","Web3","Color","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","networkId","networkData","networks","abi","address","contract","Contract","methods","totalSupply","call","i","colors","color","state","props","mint","console","log","send","from","once","receipt","event","preventDefault","value","input","map","key","backgroundColor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,G;;;;;;;;;;;;;;;;uBAGI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIHC,MAAM,CAACC,Q;;;;;AACRD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAGH,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFI,MAIA;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,2BAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKKH,gBAAAA,I,GAAOF,MAAM,CAACE,I,EACpB;;;uBACuBA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAlB,iBAAd;AACMG,gBAAAA,S,GAAY,M;AACZC,gBAAAA,W,GAAchB,KAAK,CAACiB,QAAN,CAAeF,SAAf,C;;qBACjBC,W;;;;;AACKE,gBAAAA,G,GAAMlB,KAAK,CAACkB,G;AACZC,gBAAAA,O,GAAUH,WAAW,CAACG,O;AACtBC,gBAAAA,Q,GAAW,IAAId,IAAI,CAACI,GAAL,CAASW,QAAb,CAAsBH,GAAtB,EAA2BC,OAA3B,C;AACjB,qBAAKN,QAAL,CAAc;AAACO,kBAAAA,QAAQ,EAARA;AAAD,iBAAd,E,CACA;;;uBAC0BA,QAAQ,CAACE,OAAT,CAAiBC,WAAjB,GAA+BC,IAA/B,E;;;AAApBD,gBAAAA,W;AACN,qBAAKV,QAAL,CAAc;AAACU,kBAAAA,WAAW,EAAXA;AAAD,iBAAd,E,CACA;;AACSE,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,IAAEF,W;;;;;;uBACGH,QAAQ,CAACE,OAAT,CAAiBI,MAAjB,CAAwBD,CAAC,GAAC,CAA1B,EAA6BD,IAA7B,E;;;AAAdG,gBAAAA,K;AACN,qBAAKd,QAAL,CAAc;AAACa,kBAAAA,MAAM,+BAAM,KAAKE,KAAL,CAAWF,MAAjB,IAAyBC,KAAzB;AAAP,iBAAd;;;AAF8BF,gBAAAA,CAAC,E;;;;;;;;;AAMjCrB,gBAAAA,MAAM,CAACK,KAAP,CAAa,0CAAb;;;;;;;;;;;;;;;QAIJ;;;;AACA,eAAYoB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAWnBC,IAXmB,GAWZ,UAACH,KAAD,EAAW;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AACA,YAAKJ,KAAL,CAAWR,QAAX,CAAoBE,OAApB,CAA4BQ,IAA5B,CAAiCH,KAAjC,EAAwCM,IAAxC,CAA6C;AAAEC,QAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWd;AAAnB,OAA7C,EACCqB,IADD,CACM,SADN,EACiB,UAACC,OAAD,EAAa;AAC5B,cAAKvB,QAAL,CAAc;AACZa,UAAAA,MAAM,+BAAM,MAAKE,KAAL,CAAWF,MAAjB,IAAyBC,KAAzB;AADM,SAAd;AAGD,OALD;AAMD,KAnBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXd,MAAAA,OAAO,EAAE,EADE;AAEXM,MAAAA,QAAQ,EAAE,IAFC;AAGXG,MAAAA,WAAW,EAAE,CAHF;AAIXG,MAAAA,MAAM,EAAE;AAJG,KAAb;AAFiB;AAQlB,G,CAED;;;;;6BAWS;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,qCADZ;AAEE,QAAA,IAAI,EAAC,0CAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB,KAAKE,KAAL,CAAWd,OAA/B,CADF,CADF,CADF,CAVF,CADF,EAmBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAGE;AAAM,QAAA,QAAQ,EAAE,kBAACuB,KAAD,EAAW;AACzBA,UAAAA,KAAK,CAACC,cAAN;AACA,cAAMX,KAAK,GAAG,MAAI,CAACA,KAAL,CAAWY,KAAzB;;AACA,UAAA,MAAI,CAACT,IAAL,CAAUH,KAAV;AACD,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA;AACA,QAAA,IAAI,EAAG,MADP;AAEA,QAAA,SAAS,EAAG,mBAFZ;AAGA,QAAA,WAAW,EAAG,aAHd;AAIA,QAAA,GAAG,EAAI,aAACa,KAAD,EAAW;AAAC,UAAA,MAAI,CAACb,KAAL,GAAaa,KAAb;AAAmB,SAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAaA;AACA,QAAA,IAAI,EAAG,QADP;AAEA,QAAA,SAAS,EAAC,2BAFV;AAGA,QAAA,KAAK,EAAG,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbA,CAHF,CADF,CADF,CADF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EA6BE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWF,MAAX,CAAkBe,GAAlB,CAAsB,UAACd,KAAD,EAAOe,GAAP,EAAe;AACpC,eACE;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAe,UAAA,SAAS,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,OAAf;AACA,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEhB;AAAnB,WADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,KAAN,CAHN,CADF;AAOD,OARA,CADH,CA7BF,CAnBF,CADF;AA+DD;;;;EAvIe7B,S;;AA0IlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3'\nimport Color from '../abis/Color.json'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n\n    else {\n      window.alert('¡Considera usar Metamask!')\n    }\n\n  }\n\n  async loadBlockchainData(){\n    const web3 = window.web3\n    // Cargar una cuenta\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkId = '5777'\n    const networkData = Color.networks[networkId]\n    if(networkData) {\n      const abi = Color.abi \n      const address = networkData.address\n      const contract = new web3.eth.Contract(abi, address)\n      this.setState({contract})\n      // Función 'totalSupply' del Smart Contract\n      const totalSupply = await contract.methods.totalSupply().call()\n      this.setState({totalSupply})\n      // Carga de colores\n      for (var i = 1; i<=totalSupply; i++){\n        const color = await contract.methods.colors(i-1).call()\n        this.setState({colors: [...this.state.colors, color] \n        })\n      }\n    } else {\n      window.alert('¡Smart Contract no desplegado en la red!')\n    }\n  }\n\n  // Constructor\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 0,\n      colors: []\n    }\n  }\n\n  // Función para un nuevo Color como NFT\n  mint = (color) => {\n    console.log('¡Nuevo NFT en procedimiento!')\n    this.state.contract.methods.mint(color).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({\n        colors: [...this.state.colors, color]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"https://frogames.es/rutas-de-aprendizaje\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            DApp\n          </a>\n\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-white\">\n                <span id=\"account\">{this.state.account}</span>   \n              </small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n\n                <h1> DApp de coleccionables de NFT's</h1>\n                <form onSubmit={(event) => {\n                  event.preventDefault()\n                  const color = this.color.value\n                  this.mint(color)\n                }}>\n\n                <input \n                type = 'text'\n                className = 'form-control mb-1'\n                placeholder = 'Ej: #FFFFFF'\n                ref = {(input) => {this.color = input}}\n                />\n\n                <input \n                type = 'submit'\n                className=\"btn btn-block btn-success\"\n                value = \"NUEVO NFT\"\n                />\n                </form>\n              </div>\n            </main>\n          </div>\n          <hr/>\n          <div className=\"row text-center\">\n            {this.state.colors.map((color,key) => {\n              return (\n                <div key={key} className=\"col-md-3 mb-3\">\n                <div className=\"token\" \n                style={{ backgroundColor: color }}></div>\n                      <div>{color}</div>\n                   </div>\n                )\n            })}\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}